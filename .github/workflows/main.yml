name: Create and publish a Docker image

on:
  push:
    branches: ["development"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.EC2_IPADDRESS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
          script: |
            ssh -o StrictHostKeyChecking=no "echo "Hello""
      
      # - name: Install SSH Key
      #   shell: bash
      #   with:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #   run: |
      #     - apk add openssh-client
      #     - eval $(ssh-agent -s)
      #     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      #     - mkdir -p ~/.ssh
      #     - chmod 700 ~/.ssh
      #     - chmod 400 ~/.ssh
      #     - printenv
      #     - ls -la
      # - name: Pull image and start server
      #   with:
      #     USER: ${{ secrets.USER }}
      #     EC2_IPADDRESS: ${{ secrets.EC2_IPADDRESS }}
      #   run: |
      #     - ssh -o StrictHostKeyChecking=no $USER@$EC2_IPADDRESS "echo "Hello""
